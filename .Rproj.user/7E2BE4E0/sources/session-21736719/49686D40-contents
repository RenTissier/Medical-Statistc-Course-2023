
data <- t(dataGene)
featureGroups = GeneTest[[1]]
sampleGroups = sampleData$condition
par.method = 'sequential'
offsets= offsTest
ar=T

function (data, i = NULL, featureGroups = NULL, sampleGroups = NULL, 
          nullmodel = FALSE, covars = NULL, offsets = NULL, onlyhyper = FALSE, 
          nthreadinla = 1, nfeatmax = 100, fix.seed = FALSE, ind.random = TRUE, 
          effoutput = T, keep = NULL, randomprec = c(1, 0.001), strata = NULL, 
          ZI = FALSE, ar = FALSE, ar.int = FALSE, verbosity = -1) 
{
  if (is.null(sampleGroups)) 
    stop("sampleGroups is NULL.")
  if (!is.null(attr(data, "seed"))) {
    set.seed(attr(data, "seed"))
  }
  else {
    if (is.logical(fix.seed) && fix.seed) 
      fix.seed <- 42
    if (is.numeric(fix.seed)) {
      set.seed(fix.seed)
    }
    else if (is.null(fix.seed) || !exists(".Random.seed")) {
      set.seed(NULL)
    }
  }
  if (is.null(i) & is.null(featureGroups)) {
    indexall <- 1:ncol(data)
    my.id <- attr(data, "feature.group.name")
  }
  else {
    indexall <- featureGroups[[i]]
    my.id <- names(featureGroups)[i]
  }
  niso <- length(indexall)
  if (niso > nfeatmax) {
    print("Number of features > nfeatmax; model fit on subset of nfeatmax features. Use finalFit to obtain results on all features\n          in this group")
    indices <- sample(indexall, nfeatmax)
    niso <- nfeatmax
  }
  else {
    indices <- indexall
  }
  nsam <- nrow(data)
  sampleGroups <- as.factor(sampleGroups)
  isosel <- data[, indices]
  indiv <- rep(1:nsam, niso)
  isofac <- factor(sort(rep(1:niso, nsam)))
  if (!is.null(offsets)) 
    covars <- cbind(covars, offs = offsets)
  if (is.null(covars)) {
    covars2 <- data.frame(sampleGroups)
  }
  else {
    covars2 <- data.frame(sampleGroups, covars)
  }
  covs <- data.table::rbindlist(lapply(1:niso, function(i) covars2))
  y <- as.numeric(unlist(isosel))
  if (!is.null(strata)) {
    stratagene <- factor(as.character(strata[indices]))
    nlev <- length(levels(stratagene))
    if (nlev > 1) {
      mm <- model.matrix(~0 + stratagene)
      wh0 <- which(mm == 0, arr.ind = TRUE)
      mm2 <- mm
      mm2[wh0] <- NA
      mm3 <- mm2 %x% rep(1, nsam)
      y <- as.matrix(mm3 * y)
    }
    mystrata <- factor(matrix(as.numeric(stratagene), ncol = 1) %x% 
                         rep(1, nsam))
  }
  else {
    mystrata <- factor(rep(1, nsam * niso))
  }
  sampleGroups <- as.factor(sampleGroups)
  sg <- as.numeric(sampleGroups) - 1
  interact <- factor(as.numeric(isofac) * as.numeric(sg))
  mdi <- data.frame(y, indiv, isofac, covs, interact, mystrata = mystrata)
  vec <- c(c(1, rep(0, niso)), c(0, rep(1, niso)))
  Ai <- matrix(vec, nrow = 2, byrow = T)
  pmt <- proc.time()
  nstrat <- length(levels(mdi$mystrata))
  if (ZI) 
    fams <- rep("zeroinflatednbinomial1", nstrat)
  else fams <- rep("nbinomial", nstrat)
  inlaY <- mdi[, 1:nstrat]
  assign("inlaY", inlaY, envir = globalenv())
  mdi2 <- mdi[, -(1:nstrat)]
  ==if (ar & (!ar.int)) {
    mdi2$isofac <- as.numeric(mdi2$isofac)
    if (nullmodel) {
      if (ind.random) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + f(indiv)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + f(indiv)
        }
      }
      else if (!ind.random) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + indiv
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + indiv
        }
      }
    }
    else {
      if (ind.random) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + f(indiv) + f(interact, constr = FALSE, 
                                        extraconstr = list(A = Ai, e = c(0, 0)), 
                                        param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + f(indiv) + 
            f(interact, constr = FALSE, extraconstr = list(A = Ai, 
                                                           e = c(0, 0)), param = randomprec)
        }
      }
      else if (!ind.random) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + indiv + f(interact, constr = FALSE, 
                                     extraconstr = list(A = Ai, e = c(0, 0)), 
                                     param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + indiv + f(interact, 
                                                                                         constr = FALSE, extraconstr = list(A = Ai, 
                                                                                                                            e = c(0, 0)), param = randomprec)
        }
      }
    }
  }
  else if ((!ar) & ar.int) {
    if (ind.random) {
      if (nullmodel) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            f(indiv, model = "ar1")
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + f(indiv, model = "ar1")
        }
      }
      else {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            f(indiv) + f(interact, model = "ar1", constr = FALSE, 
                         extraconstr = list(A = Ai, e = c(0, 0)), 
                         param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + f(indiv) + f(interact, model = "ar1", 
                                        constr = FALSE, extraconstr = list(A = Ai, 
                                                                           e = c(0, 0)), param = randomprec)
        }
      }
    }
    else if (!ind.random) {
      if (nullmodel) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            indiv
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + indiv
        }
      }
      else {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            indiv + f(interact, model = "ar1", constr = FALSE, 
                      extraconstr = list(A = Ai, e = c(0, 0)), 
                      param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + indiv + f(interact, model = "ar1", 
                                     constr = FALSE, extraconstr = list(A = Ai, 
                                                                        e = c(0, 0)), param = randomprec)
        }
      }
    }
  }
  else if (ar & ar.int) {
    mdi2$isofac <- as.numeric(mdi2$isofac)
    if (ind.random) {
      if (nullmodel) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + f(indiv, model = "ar1")
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + f(indiv, 
                                                                                 model = "ar1")
        }
      }
      else {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + f(indiv) + f(interact, model = "ar1", 
                                        constr = FALSE, extraconstr = list(A = Ai, 
                                                                           e = c(0, 0)), param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + f(indiv) + 
            f(interact, model = "ar1", constr = FALSE, 
              extraconstr = list(A = Ai, e = c(0, 0)), 
              param = randomprec)
        }
      }
    }
    else if (!ind.random) {
      if (nullmodel) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + indiv
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + indiv
        }
      }
      else {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + f(isofac, model = "ar1") + 
            sampleGroups + indiv + f(interact, model = "ar1", 
                                     constr = FALSE, extraconstr = list(A = Ai, 
                                                                        e = c(0, 0)), param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + f(isofac, 
                                               model = "ar1") + sampleGroups + indiv + f(interact, 
                                                                                         model = "ar1", constr = FALSE, extraconstr = list(A = Ai, 
                                                                                                                                           e = c(0, 0)), param = randomprec)
        }
      }
    }
  }
  else {
    if (ind.random) {
      if (nullmodel) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            f(indiv)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + f(indiv)
        }
      }
      else {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            f(indiv) + f(interact, constr = FALSE, extraconstr = list(A = Ai, 
                                                                      e = c(0, 0)), param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + f(indiv) + f(interact, constr = FALSE, 
                                        extraconstr = list(A = Ai, e = c(0, 0)), 
                                        param = randomprec)
        }
      }
    }
    else if (!ind.random) {
      if (nullmodel) {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            indiv
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + indiv
        }
      }
      else {
        if (is.null(offsets)) {
          form <- inlaY ~ 0 + isofac + sampleGroups + 
            indiv + f(interact, constr = FALSE, extraconstr = list(A = Ai, 
                                                                   e = c(0, 0)), param = randomprec)
        }
        else {
          form <- inlaY ~ 0 + offset(offs) + isofac + 
            sampleGroups + indiv + f(interact, constr = FALSE, 
                                     extraconstr = list(A = Ai, e = c(0, 0)), 
                                     param = randomprec)
        }
      }
    }
  }
  if (ZI) 
    cd <- lapply(1:nstrat, function(i) {
      list(prior = c("gaussian", "gaussian"), param = c(c(0, 
                                                          0.001), c(0, 0.001)))
    })
  else cd <- lapply(1:nstrat, function(i) {
    list(prior = c("gaussian"), param = c(0, 0.001))
  })
  inlafit <- INLA::inla(formula = form, family = fams, data = data.frame(inlaY, 
                                                                         mdi2), silent = max(1 - verbosity, 0), verbose = verbosity > 
                          1, debug = verbosity > 2, control.compute = list(mlik = T), 
                        num.threads = nthreadinla, only.hyperparam = onlyhyper, 
                        control.family = cd)
  tm <- proc.time() - pmt
  if (effoutput) {
    nm = names(inlafit)
    if ("mlik1" %in% nm && "mlik2" %in% nm && !"mlik" %in% 
        nm) {
      inlafit[["mlik"]] <- list(inlafit$mlik1, inlafit$mlik2)
    }
    tokeep <- c("summary.fixed", "summary.lincomb", "mlik", 
                "cpo", "po", "waic", "summary.random", "summary.linear.predictor", 
                "summary.hyperpar", "marginals.hyperpar", "internal.summary.hyperpar", 
                "internal.marginals.hyperpar", "dic", "neffp", "cpu.used", 
                "call")
    tokeep <- unique(c(tokeep, keep))
    tokeep <- tokeep[tokeep %in% names(inlafit)]
    inlafit <- inlafit[tokeep]
  }
  if (!is.null(colnames(data))) {
    indices <- colnames(data)[indices]
  }
  inlafit <- c(list(id = my.id, comptime = tm, niso = niso, 
                    nsam = nsam, ndata = nsam * niso, indices = indices, 
                    initprec = randomprec), inlafit)
  return(inlafit)