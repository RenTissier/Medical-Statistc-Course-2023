"0","plot.step <- function(ymat, x = NULL, mycols = NULL,"
"0","                      xlab = NULL, ylab = NULL, ylim = NULL, elv = NULL){"
"0","  if(is.null(x)) { x <- 1:nrow(ymat)}"
"0","  if(nrow(ymat) != length(x)) stop(""The number of exons in x differs from"
"0","                                   the number of rows in y."")"
"0","  if( !is.null(mycols)) {  if(ncol(ymat) != length(mycols))"
"0","    stop(""The number of colours provided must be the same as the number of samples."")"
"0","  } else {"
"0","      mycols <- rainbow(ncol(ymat))"
"0","  }"
"0","  xi <- 1"
"0","  if(is.null(elv)) {"
"0","    nx <- c(min(x)-0.5, x + 0.5)"
"0","    nx2 <- nx[ -c(1, length(nx))] - 0.05"
"0","    nx <- sort(c(nx, nx2))"
"0","    mxaxt <- NULL"
"0","  } else {"
"0","    elv <- (elv/sum(elv))*length(elv)"
"0","    plv <- cumsum(elv)"
"0","    plvl <- 0.5 + c(0, plv[-length(plv)])"
"0","    plvu <- 0.5 + plv - 0.05"
"0","    nx <- sort(c(plvl, plvu))"
"0","    mxaxt <- ""none"""
"0","  }"
"0","  ny <- rep(ymat[, xi], each=2)"
"0","  if(is.null(ylab)) ylab <- ""exon expression"""
"0","  if(is.null(xlab)) xlab <- ""exon number"""
"0","  if(is.null(ylim)) ylim <- range(ymat, na.rm=T)"
"0","  plot(nx, ny, type=""l"", col=mycols[xi], xlab = xlab, ylab = ylab,"
"0","       ylim = ylim, xaxt = mxaxt)"
"0","  if( !is.null(mxaxt) ) axis(1, at = nx[(1:nrow(ymat))*2 - 1], labels = 1:nrow(ymat))"
"0","  for(xi in 2:ncol(ymat)) lines(nx, rep(ymat[, xi], each=2), col = mycols[xi])"
"0","}"
"0",""
